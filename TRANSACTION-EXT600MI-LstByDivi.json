{"programModules":{"EXT600MI":{"program":"EXT600MI","triggers":{},"transactions":{"LstByDivi":{"sourceUuid":"44d62fce-d33a-4e3a-9977-e5296a988a7b","name":"LstByDivi","program":"EXT600MI","description":"List info to PriceFX by division","active":true,"multi":true,"modified":1683654213539,"modifiedBy":"JESBJO00","outputFields":[{"name":"IVNO","description":"Invoice Number","length":9,"mandatory":false,"type":"A"},{"name":"IVDT","description":"Invoice Date","length":8,"mandatory":false,"type":"A"},{"name":"CUNO","description":"Customer Number","length":10,"mandatory":false,"type":"A"},{"name":"CUCD","description":"Currency","length":3,"mandatory":false,"type":"A"},{"name":"TEPY","description":"Payment Terms","length":3,"mandatory":false,"type":"A"},{"name":"ITNO","description":"Item Number","length":15,"mandatory":false,"type":"A"},{"name":"ITDS","description":"Item Description","length":60,"mandatory":false,"type":"A"},{"name":"LTYP","description":"Line Type","length":1,"mandatory":false,"type":"A"},{"name":"SPUN","description":"Sales Price Unit of Measure","length":3,"mandatory":false,"type":"A"},{"name":"QTY6","description":"Qty 6","length":21,"mandatory":false,"type":"A"},{"name":"QTY4","description":"Qty 4","length":21,"mandatory":false,"type":"A"},{"name":"DCOS","description":"Issued Cost Amount","length":23,"mandatory":false,"type":"A"},{"name":"SAPR","description":"Sales Price","length":23,"mandatory":false,"type":"A"},{"name":"NEPR","description":"Net Price","length":23,"mandatory":false,"type":"A"},{"name":"LNAM","description":"Line Amount - Ordered Currency","length":17,"mandatory":false,"type":"A"},{"name":"HIE1","description":"Hierarchy Level 1","length":15,"mandatory":false,"type":"A"},{"name":"HIE2","description":"Hierarchy Level 2","length":15,"mandatory":false,"type":"A"},{"name":"HIE3","description":"Hierarchy Level 3","length":15,"mandatory":false,"type":"A"},{"name":"HIE4","description":"Hierarchy Level 4","length":15,"mandatory":false,"type":"A"},{"name":"HIE5","description":"Hierarchy Level 5","length":15,"mandatory":false,"type":"A"},{"name":"FACI","description":"Facility","length":3,"mandatory":false,"type":"A"},{"name":"ORTP","description":"Order Type","length":3,"mandatory":false,"type":"A"},{"name":"WCON","description":"Contact Method","length":3,"mandatory":false,"type":"A"},{"name":"ORDT","description":"Order Date","length":8,"mandatory":false,"type":"A"},{"name":"ADID","description":"Address Id","length":6,"mandatory":false,"type":"A"},{"name":"OFNO","description":"Quotation Number","length":10,"mandatory":false,"type":"A"},{"name":"AGNO","description":"Agreement Number","length":7,"mandatory":false,"type":"A"},{"name":"SMCD","description":"Salesperson","length":10,"mandatory":false,"type":"A"},{"name":"RSCD","description":"Reason code","length":3,"mandatory":false,"type":"A"},{"name":"TEDL","description":"Delivery Terms","length":3,"mandatory":false,"type":"A"},{"name":"TEL1","description":"Terms text","length":36,"mandatory":false,"type":"A"},{"name":"ORNO","description":"Order Number","length":10,"mandatory":false,"type":"A"},{"name":"YEA4","description":"Invoice Year","length":4,"mandatory":false,"type":"A"},{"name":"ORST","description":"Status","length":2,"mandatory":false,"type":"A"},{"name":"NAME","description":"Name","length":36,"mandatory":false,"type":"A"},{"name":"TOWN","description":"City","length":20,"mandatory":false,"type":"A"},{"name":"CSCD","description":"Country","length":3,"mandatory":false,"type":"A"},{"name":"PONO","description":"Postal Code","length":10,"mandatory":false,"type":"A"},{"name":"LOCD","description":"Local Currency","length":3,"mandatory":false,"type":"A"},{"name":"DLIX","description":"Delivery Number","length":11,"mandatory":false,"type":"A"},{"name":"ATVN","description":"Attribute","length":17,"mandatory":false,"type":"A"},{"name":"PONR","description":"Order Line Number","length":5,"mandatory":false,"type":"N"},{"name":"DISC","description":"Discount","length":21,"mandatory":false,"type":"A"},{"name":"DISM","description":"Additional Discount","length":21,"mandatory":false,"type":"A"},{"name":"CHGH","description":"Handling Charges","length":17,"mandatory":false,"type":"A"},{"name":"CHGF","description":"Freight Charges","length":17,"mandatory":false,"type":"A"},{"name":"CHGO","description":"Other Charges","length":17,"mandatory":false,"type":"A"},{"name":"AGNH","description":"Agreement Number Head","length":7,"mandatory":false,"type":"A"},{"name":"PYNO","description":"Payer","length":10,"mandatory":false,"type":"A"},{"name":"ARAT","description":"Currency rate","length":15,"mandatory":false,"type":"A"},{"name":"WHLO","description":"Warehouse","length":3,"mandatory":false,"type":"A"},{"name":"UCA2","description":"Agent 1","length":20,"mandatory":false,"type":"A"},{"name":"UCA3","description":"Agent 2","length":20,"mandatory":false,"type":"A"},{"name":"EXIN","description":"Ext Invoice Number","length":14,"mandatory":false,"type":"A"}],"inputFields":[{"name":"CONO","description":"Company Number","length":3,"mandatory":false,"type":"N"},{"name":"DIVI","description":"Division","length":3,"mandatory":true,"type":"A"}],"utilities":[]}},"batches":{},"advancedPrograms":{}}},"utilities":{},"sources":{"44d62fce-d33a-4e3a-9977-e5296a988a7b":{"uuid":"44d62fce-d33a-4e3a-9977-e5296a988a7b","updated":1684870791001,"updatedBy":"JESBJO00","created":1681054154247,"createdBy":"JESBJO00","apiVersion":"0.21","beVersion":"16.0.0.20230320183423.8","language":"GROOVY","codeHash":"6D15CB9CE2F54B0B88FE581544E4EA7146C081E48E861D01923CA7724A14165F","code":""}}}